<?xml version="1.0" standalone="no"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
    "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd"
[
     <!ENTITY % local SYSTEM "local.ent">
     %local;
     <!ENTITY manref SYSTEM "manref.xml">
     <!ENTITY gpl2 SYSTEM "gpl-2.0.xml">
     <!ENTITY % idcommon SYSTEM "common/common.ent">
     %idcommon;
]>
<book>
 <bookinfo>
  <title>MP-SPARQL - User's Guide and Reference</title>
  <authorgroup>
   <author>
    <firstname>Adam</firstname><surname>Dickmeiss</surname>
   </author>
   <author>
    <firstname>Heikki</firstname><surname>Levanto</surname>
   </author>
   <author>
    <firstname>Jakub</firstname><surname>Skoczen</surname>
   </author>
  </authorgroup>
  <releaseinfo>&version;</releaseinfo>
  <copyright>
   <year>2014-2015</year>
   <holder>Index Data</holder>
  </copyright>
  <abstract>
   <simpara>
    This manual is part of MP-SPARQL version &version;.
    </simpara>
   <simpara>
    MP-XQuery is a Metaproxy module that converts Type-1/RPN Queries
    to SPARQL.
   </simpara>
   <simpara>
    MP-SPARQL is covered by the GNU General Public License version 2.
   </simpara>
   <simpara>
    <inlinemediaobject>
     <imageobject>
      <imagedata fileref="common/id.png" format="PNG"/>
     </imageobject>
     <imageobject>
      <imagedata fileref="common/id.eps" format="EPS"/>
     </imageobject>
    </inlinemediaobject>
   </simpara>
  </abstract>
 </bookinfo>
 <chapter id="introduction">
  <title>Introduction</title>
  <para>
   MP-SPARQL is a <ulink url="&url.metaproxy;">Metaproxy</ulink> module
   that converts Type-1/RPN queries to <ulink url="http://www.w3.org/TR/rdf-sparql-query/">SPARQL</ulink>.
  </para>
 </chapter>
 <chapter id="installation">
  <title>Installation</title>
  <para>
   MP-SPARQL is available as packages for CentOS/RHEL 5+6 and most
   recent Ubuntu/Debian versions. For other systems, the module must be build
   from source.
  </para>
  <sect1 id="installation.packages">
   <title>Installing packages</title>
   <para>
    You need to enable the relevant software repositories.
    For setting up refer to one of:
    <ulink
	url="http://ftp.indexdata.dk/pub/mp-sparql/redhat/centos/5.5/README">CentOS 5</ulink>,
    <ulink
	url="http://ftp.indexdata.dk/pub/mp-sparql/redhat/centos/6/README">CentOS 6</ulink>
    ,
    <ulink
	url="http://ftp.indexdata.dk/pub/mp-sparql/ubuntu/README">Ubuntu</ulink>
    and
    <ulink
	url="http://ftp.indexdata.dk/pub/mp-sparql/debian/README">Debian</ulink>
   </para>
   <para>
    The package is called <literal>mp-sparql</literal> on RHEL/Debian systems.
    Install that package and you are ready to use filter "sparql" in your
    setup.
   </para>
   <para>
    mp-sparql depends on a number of packages created by Index Data and
    system-provided ones, such as Libxml2. For external software Zorba, no
    system package exist so Index Data has packaged that separately. This
    package is called <literal>idzorba</literal>. All these dependences should
    be automatically installed when the Index Data software repository is
    set up.
   </para>
  </sect1>
  <sect1 id="installation.source">
   <title>Installing from source</title>
   <para>
    To build from source, you need metaproxy development
    packages. Metaproxy can be installed as follows:
    <screen>
     ./configure
     make
     sudo make install
    </screen>
    Refer to the Metaproxy documentation for requirements and options.
   </para>
   <para>
    We are now ready to build the MP-SPARQL module with:
    <screen>
     cd mp-sparql-version
     make MP_CONFIG=/usr/local/bin/mp-config
    </screen>
    Adjust <literal>MP_CONFIG</literal> value
    above for the correct location of installed
    Metaproxy's mp-config. <literal>MP_CONFIG</literal> can be omitted
    if Metaproxy was installed in the system <filename>PATH</filename>.
   </para>
   <para>
    You can now install the <filename>metaproxy_filter_sparql.so</filename>
    in a directory searched by Metaproxy daemon.
    Specifically, that's the directories
    given by the <literal>dlpath</literal> configuration.
   </para>
   <para>
    If dlpath includes <filename>/usr/lib/metaproxy6/modules</filename>,
    the module can be installed with:
    <screen>
     cp src/metaproxy_filter_sparql.so /usr/lib/metaproxy6/modules
    </screen>
   </para>
   <note>
    <para>
     For RHEL/CentOS systems on 64-bit architectures, the correct paths is:
     <filename>/usr/lib64/metaproxy6/modules</filename>.
    </para>
   </note>
  </sect1>
  <sect1 id="configuration">
   <title>Configuration</title>
   <para>
    If you have installed mp-sparql as a package or have executed
    <literal>make install</literal> from source, sample configuration
    can be found in <filename>/usr/share/mp-sparql/bibframe</filename> or
    <filename>/usr/local/share/mp-sparql/bibframe</filename>. In the
    the following /usr/share prefix assumed. Adjust accordingly.
    The directory contains these files:
    <variablelist>
     <varlistentry>
      <term><filename>triplestore.xml</filename></term>
      <listitem>
       <para>
	A mature PQF to SPARQL configuration illustrating a lot of the
	configuration facilities that are described in the manual
	page of <xref linkend="sparql"/>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><filename>config-sparql.xml</filename></term>
      <listitem>
       <para>
	A full metaproxy configuration file that includes
	<filename>triplestore.xml</filename> cofiguration for the
	mp-sparql filter, enables SRU and CQL to PQF conversion.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><filename>filter-sparql.xml</filename></term>
      <listitem>
       <para>
	A partial metaproxy configuration suitable to be enabled in
	<filename>/etc/metaproxy/filters-enabled</filename>.
	This includes <filename>triplestore.xml</filename> as well.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    If you want to use the package layout and modular configuration we
    suggest you use filter-sparql.xml and perform something along the lines of:
    <screen>
     cp /usr/share/mp-sparql/bibframe/filter-sparql.xml /etc/metaproxy/filters-available
     cp /usr/share/mp-sparql/bibframe/triplestore.xml /etc/metaproxy
     vi /etc/metaproxy/triplestore.xml
     ln -s ../filters-available/filter-sparql.xml /etc/metaproxy/filters-enabled
     service metaproxy restart
    </screen>
    A copy of triplestore.xml is made. Adjust the
    <literal>&lt;defaults uri=.. </literal> value to the URI of your
    triplestore.
   </para>
   <para>
    If you want to create your own top-level configuration, you can copy
    <filename>config-sparql.xml</filename> to any location you like and
    run metaproxy with that. Something like this:
    <screen>
     mkdir /etc/myconfig
     cp /usr/share/mp-sparql/bibframe/* /etc/myconfig
     sudo vi /etc/myconfig/triplestore.xml
     metaproxy -c /etc/myconfig/config-sparql.xml
    </screen>
    Again, a copy of triplestore.xml is made. Adjust the
    <literal>&lt;defaults uri=.. </literal> value to the URI of your
    triplestore.
   </para>
   <note>
    <para>
     Do not edit files in <filename>/usr/share/mp-sparql/bibframe</filename>.
     They are only samples and will be overwritten by a package update.
     Instead copy the files away from there if you need to modify them.
    </para>
   </note>
  </sect1>
  <sect1 id="using">
   <title>Using the service</title>
   <para>
    Either way, unless you have adjusted the metaproxy configuration,
    Metaproxy can be reached on port 9000. Example using yaz-client and
    PQF/Type-1:
    <screen><![CDATA[
adam@tuna:~$ yaz-client localhost:9000/work
Connecting...OK.
Sent initrequest.
Connection accepted by v3 target.
ID     : 81
Name   : sparql
Version: 1.9.0/5.14.6 87faebe8ef5cab8f6df86f387e8b919b7b9897a8
Options: search present namedResultSets
Elapsed: 0.000961
Z> f @attr 1=bf.anytitle water
Sent searchRequest.
Received SearchResponse.
Search was a success.
Number of hits: 1, setno 1
records returned: 0
Elapsed: 0.279441
Z> s
Sent presentRequest (1+1).
Records: 1
[work]Record type: XML
<?xml version="1.0" encoding="utf-8" ?>
<rdf:RDF
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:ns2="http://bibframe.org/vocab/" >
  <rdf:Description rdf:about="http://bibframe.org/resources/sample-lc-2/15513351">
  ...
  </rdf:Description>
</rdf:RDF>nextResultSetPosition = 0
Elapsed: 0.256142
]]></screen>
   </para>
   <para>
   Example using SRU:
   <ulink url="http://localhost:9000/work?query=bf.anytitle%3Dwater&amp;maximumRecords=1"/>
   </para>
  </sect1>
 </chapter>
 <reference id="reference">
  <title>Reference</title>
   <partintro id="reference-introduction">
    <para>
     The material in this chapter is drawn directly from the individual
     manual entries.
    </para>
   </partintro>
   &manref;
 </reference>

 <appendix id="license">
  <title>License</title>
  <para>
   Copyright (C) 2014-2015 Index Data
  </para>

  <para>
   Metaproxy is free software; you can redistribute it and/or modify it under
   the terms of the GNU General Public License as published by the Free
   Software Foundation; either version 2, or (at your option) any later
   version.
   </para>

  <para>
   Metaproxy is distributed in the hope that it will be useful, but WITHOUT ANY
   WARRANTY; without even the implied warranty of MERCHANTABILITY or
   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
   for more details.
  </para>

  <para>
   You should have received a copy of the GNU General Public License
   along with Metaproxy; see the file LICENSE.  If not, write to the
   Free Software Foundation,
   51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  </para>

 </appendix>

 &gpl2;
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: nxml
nxml-child-indent: 1
End:
-->
